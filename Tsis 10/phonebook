import psycopg2
from config import config



def create_tables():
    commands = (
        """
        CREATE TABLE phonebook (
            number SERIAL PRIMARY KEY,
            username TEXT NOT NULL,
            telephone_number BIGINT NOT NULL,
            city TEXT NOT NULL,
            age BIGINT NOT NULL
        )
        """)
    connect = None 
    try:
        params = config()

        connect = psycopg2.connect(**params)
        cursor = connect.cursor()

        for command in commands:
            cursor.execute(command)

        cursor.close()

        connect.commit()
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
         if connect is not None:
              connect.close()
    
def insert_vendor_list(vendor_list):
    
    sql = "INSERT INTO phonebook(username,telephone_number,city,age) VALUES(%s, %s, %s, %s)"
    conn = None
    try:
        # read database configuration
        params = config()
        # connect to the PostgreSQL database
        conn = psycopg2.connect(**params)
        # create a new cursor
        cur = conn.cursor()
        # execute the INSERT statement
        cur.executemany(sql,vendor_list)
        # commit the changes to the database
        conn.commit()
        # close communication with the database
        cur.close()
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        if conn is not None:
            conn.close()

def connect():
    connect = None

    try:
        params = config()

        connect = psycopg2.connect(**params)

        cursor = connect.cursor()

        cursor.close()
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        if connect is not None:
            connect.close()
            print('Database connection closed.')


connect = None


try:
    params = config()

    connect = psycopg2.connect(**params)
    
    #insert_data = "INSERT INTO phonebook(username,telephone_number,city,age) VALUES( %s , %s , %s , %s );"

    cursor = connect.cursor()
    
    
    
    connect.commit()
    cursor.close()
except (Exception, psycopg2.DatabaseError) as error:
        print(error)
finally:
    if connect is not None:
        connect.close()
        print('Database connection closed.')

insert_vendor_list(
    [
    ("Erick", "8777", "California","21")
    ]
)



